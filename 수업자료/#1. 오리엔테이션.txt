1. 오리엔테이션

	- 프로그램이 뭐임? 컴퓨터공학, 컴퓨터과학은 또 뭐임?
 컴퓨터공학은 컴퓨터를 이용해서 데이터를 다루는 학문이다.
 뭔 개소린가 하면 A를 넣으면 B로 나오게 하는 걸 컴퓨터 공학이라고 하는 것.
 게임이라면 점들을 가지고 폴리곤을 만들어서 3D모델로 만들어갖고 모니터의 점 하나하나에 색깔을 넣어서
 그 게임의 한 장면을 출력하는 것. 이런 경우에는 3D모델의 위치나 모델의 점 정보 하나하나가 A가 되고 마지막 모니터로 출력되는 각각의 색이 B가 되겠다.
 확률 통계에서 비율을 뽑는다면 모든 사람의 데이터가 A 고 원하는 내용 / 전체 내용의 비율이 B가 될 수 있다.
날씨를 예측한다면 기상 변수 하나하나가 A가 돼서 오늘 날씨 내일 날씨가 B가 되는 것. 
 왜 모든 회사에 컴퓨터공학이 쓰이냐면 데이터를 안 쓰는 사업이란 현대는 존재하지 않기 때문. 외주를 줘서 자체 인력은 없을 수도 있다.

	-컴퓨터 구조. 폰 노이만 아키텍쳐
	 
 CPU가 메모리에서 명령어(Instruction)을 읽어서 한줄씩 실행하는 것이 현대 컴퓨터의 기본적 구조이다.
메인 메모리의 용량이 부족해서 하드 디스크라는 서브 메모리를 사용하고,
메인 메모리의 속도가 부족해서 CPU가 캐시를 가지고 있다.
여기서 모든 명령어와 자료는 메인 메모리에 올라와 있어야 하며, 이런 구조를 처음 생각해낸 것이
폰 노이만이기 때문에 폰 노이만 아키텍쳐라 부른다.

	-프로그래밍 언어의 종류

 언어는 기계어가 있어요
기계어 한번 써보면 알겠지만 사람이 쓸 만한 언어는 아니기 때문에(쓴 미친놈들도 있음)
약간 인간이 쓰는 언어에 가까운 어셈블리어가 생김.
언어가 인간이 쓰는 언어에 가까울수록 고오급 언어, 멀수록 하급언어라고 한다.

C는 고급과 하급의 중간적인 언어임.
C++은 C에 객체지향을 스까서 만든 언어.
JAVA는 C++을 좀 더 편하게 쓰려고 만든 언어.
PHP? 그건 뭐죠?

Low-High 분류 말고 Interpreter를 가지는 언어나 함수기반 언어 등 여러가지 분류가 있다.
인터프리터는 명령어 한줄씩 치면 프로그램이 대답해주는 언어. 매트랩 써봤으면 알수도 있다.
함수 기반 언어는 LISP같은 것들. 전부 함수고 루프가 없다! 디버깅할때 미칠지경이라고 함. 나는 안써봤음.

다른 공학들과 마찬가지로 알고리즘 같은 것들은 거의 5~60년대에 만들어졌기 때문에
지금와서 70?80?년대에 만들어진 객체지향이란 개념을 주창하는 건 자연스러워 보인다.

	-왜 프로그래밍 언어를 쓰느냐
 
 보통 사람들이 쓰는 말을 자연어라고 부르는데, 자연어는 한 가지 말을 하면 웬만하면 두세가지로 해석이 가능. 
 너 참 잘생겼다 예쁘다 하면 실제로 그 뜻인지 아닌지 사실 글자만 갖고는 모름. 어조까지 들어야 알 수 있다. 이런 추가적인 정보가 필요한 걸 모호성이라고 하고,
 물론 그 정보를 갖고있어도 제대로 해석할진 알 수 없음.
 그래서 프로그래밍 언어는 이런 모호함을 없앤 언어들이다.
 A라고 하면 액면그대로 A고 B라고 하면 액면그대로 B임.
 그리고 컴퓨터는 한번에 한 가지 상태밖에 가질 수 없기 때문에(이건 한정상태기계에서 더 얘기할듯) A가 세팅돼있으면 그걸 체크했을 때 B라는 값이 나올 순 없음.
 그것까지 고려를 해서 만들어진 게 프로그래밍 언어들이다.

	-객체지향

 객체는 결국 우리가 보는 사물을 어떤 의도에 맞게 딱 그 부분만 잘라서 만들어낸거라고 생각하면 되겠다.
네비게이션 같은 거에서 내가 탄 차가 나왔을 때 차 모양이 전체가 보일 필요가 없으니까 속도랑 위치만 나오면 되고, 그걸 근데 보는 사용자들은 차라고 생각한다는 것.
프로그래밍에서 쓰는 객체는 일단 두 가지 요소가 존재하는데 상태와 행동이다. 행동은 상태를 변화시키는 걸 행동이라고 함. 내가 밥을 먹으면 배가 부르다. 이럴 때 밥을 먹는 게 행동이면 배가 고팠다가 불러진 건 상태다. 
그리고 실수를 방지하고 내부의 변화가 외부에 영향을 미치지 못하게 하기 위한 캡슐화,
상속을 통해 같은 함수라도 컴파일 타임에 다르게 배정할 수 있는 다형성, 
갖고있는 데이터가 적어서 범위가 큰 상위분류 객체가 하위분류 객체를 포함하는 상속을 구현하게 된다.
뭐가 좋은지는 해봐도 모른다.

	-컴퓨터과학의 세부 분류
 우리친구 알고리즘, 자료구조 있고 컴퓨터구조 있고. 기계학습이니 운영체제니 인공지능이니
다 컴퓨터과학이다. 컴과 오세요 두번오세요.

	-근데 C++이 뭐가 좋죠?

 줘까튼 부분 극복하면 좋음. 타입도 내가 다 골라야되지 툭하면 폭발하지... 하지만 성능은 보장한다.
개나소나 프로그래밍 입문하면 C배우기 때문에 익숙해보이는 언어라는 점도 한몫함.
뭐든지 할 수 있고 성능까지 좋은 C++...크으...C++뽕에 취한다...