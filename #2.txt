4장 변수

	-변수란
 컴퓨터에서는 모든 걸 숫자, 0과 1로 표현한다. 그런데 그런 숫자들을 나열하기만 한다고 데이터가 되는 것은 아니다. 프로그래밍 언어에서는 이런 숫자에 의미를 부여하기 위한, 그리고 데이터를 편하게 사용하기 위한 변수들이 있다. 거의 모든 언어에 변수가 있을 것이다.
 변수를 선언하면 메모리 공간이 변수를 위해서 할당된다. int 한 개면 32비트 공간이 할당되고, char 한 개면 8비트 공간이 할당되는 식이다. 이 공간에는 숫자로 된 값을 써 넣을 수 있다. 내부적으로는 2진수로 저장되어 있으나 사람은 보통 10진수를 쓰므로 따로 설정해주지 않으면 10진수를 넣고 빼게 된다.

	-변수 이름
 변수 이름은 요즘은 자동완성이 발달해서 상당히 길더라도 변수에 넣을 정보를 다 담는 것이 일반적이다. 보통 첫 자는 소문자로 쓰고 새 단어를 넣으면 첫 글자를 대문자로 쓴다. ex) toCalculate
	-선언할 장소
 ANSI C(처음 정해진 C 표준) 에서는 함수 첫머리에 모든 변수를 선언하는 것이 일반적이었으나 C++에서는 쓸 때마다 중간중간 변수를 선언해서 사용한다.

	-정의와 선언
 두 가지를 혼동해서 쓰기 쉬우나 선언(Declaration)은 보통 프로토타입이나 초기화되기 전의 변수를 할당할 때에 사용한다.
정의(Definition)은 실제 내부가 있는 함수를 구현할 때나 초기값을 넣은 변수를 할당할 때에 사용된다.

5장 타입

	-변수의 타입
 모든 변수는 타입을 가진다. 설령 그것이 모든 포인터를 받을 수 있는 VOID*타입이라도 타입은 타입이다. 이 타입은 변수를 해석하는 방법이다. 같은 내부 값이 float과 int에 들어 있을 때, unsigned int에 들어 있을 때 읽는 법이 다를 수 있다. 혹은 char안에 있는 값은 아스키 코드로 바꿔서 문자로도 읽을 수 있다. 그런 내부 값을 읽는 법을 타입이라고 한다.

	-무슨 타입이 있나
 ㅇ정수
 int,char,short, bool, long
정수들은 보통 바이트 수만 다르다. 읽는 법은 같다. bool이외에는 앞에 unsigned가 붙으면 부호 없는 수, 안붙으면 부호 있는 수가 된다. VC++에서는 long은 long이라고 쓰지만 int와 같은 32비트이다
 ㅇ부동소수점
float, double,long double
 이것들도 바이트 수만 다르긴 하지만 포맷이 꽤 많이 달라지니 아무 생각없이 바꾸지 않는 편이 좋다. float가 32비트, double이 64비트이다. 부동소수점에 대해서는 모르면 설명해줌.

이런 변수들이 메모리에 차지하는 크기를 알고 싶다면 sizeof연산자를 사용하면 된다.

	-1의 보수, 2의 보수
 C++에서는(보통 웬만한 프로그래밍 언어가 모두 이 방법을 쓸 것이다) 부호를 표현하는 방식으로 2의 보수법을 사용한다. 1의 보수는 bit를 반전한 것, 2의 보수는 1의 보수에다가 1을 더한 것이다. 이렇게 하면 자연스럽게 맨 윗자리 비트가 달라진다.

	-타입 컨버전
 기본적으로는 안 하는 게 낫다. C스타일은 (타입명)변수 이렇게 넣어서 변환한다. C++템플릿을 쓰는 스타일은 cast연산자를 사용한다. static_cast<타입명>(변수) 이런 식으로 변환한다. 캐스트 연산자는 네 개 있지만 여기서 말하는 타입 컨버전에선 static_cast가 맞는 연산자이다.

6장 연산자

	-연산자란
 프로그램은 거의 모든 것들이 연산자로 이루어져 있다. cout에서 쓴 <<도 연산자이며 ++도 연산자고 두개이상, 혹은 자기 값을 바꾸는 모든 것들이 연산자이다. 사칙연산, 논리연산, 비트연산, 대입연산 등이 있다. 생소한 것은 삼항 연산자 정도겠는데 이것도 자세히 보면 어렵지 않다.

	-연산자 우선순위
 헷갈릴때마다 책을 보자. 외워봤자 별로 쓸모없다.

	-비트연산
AND OR XOR 시프트 등이 있다. 각각의 비트값을 논리표에 넣어서 맞는 값이 나온다.
	0101(십진수5)
AND	1001(십진수9)
	------
	0001(십진수1)
이런 식. 
시프트연산은 	0010(십진수 2) <<2하면
		1000(십진수 8)이렇게 된다.
뭔소린지 모르겠으면 물어보길.
